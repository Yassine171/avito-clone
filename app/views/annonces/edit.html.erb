<div class="max-w-lg mx-auto mt-8">
  <%= form_with(model: @annonce, url: @annonce.persisted? ? annonce_path(@annonce) : annonces_path, html: { method: @annonce.persisted? ? :patch : :post, multipart: true }) do |form| %>
    <% if @annonce.errors.any? %>
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
        <strong class="font-bold">Oops!</strong>
        <span class="block sm:inline">Please fix the following errors:</span>
        <ul class="mt-3 list-disc list-inside">
          <% @annonce.errors.full_messages.each do |msg| %>
            <li><%= msg %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <div class="mb-4">
      <%= form.label :title, class: "block text-gray-700 font-bold mb-2" %>
      <%= form.text_field :title, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
    </div>

    <div class="mb-4">
      <%= form.label :description, class: "block text-gray-700 font-bold mb-2" %>
      <%= form.text_area :description, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
    </div>

    <div class="mb-4">
      <%= form.label :price, class: "block text-gray-700 font-bold mb-2" %>
      <%= form.number_field :price, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
    </div>

    <div class="mb-4">
      <%= form.label :ville_id, class: "block text-gray-700 font-bold mb-2" %>
      <%= form.collection_select(:ville_id, Ville.all, :id, :name, { prompt: true }, { class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" }) %>
    </div>

    <div class="mb-4">
      <%= form.label :category_id, class: "block text-gray-700 font-bold mb-2" %>
      <%= form.collection_select(:category_id, Category.all, :id, :name, { prompt: true }, { class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" }) %>
    </div>

    <div class="mb-4">
      <%= form.label :type_transaction, class: "block text-gray-700 font-bold mb-2" %>
      <%= form.select :type_transaction, Annonce.type_transactions.map {|k, v| [k.capitalize, k]}, {}, { class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" } %>
    </div>

    <div class="mb-4">
      <%= form.label :additional_properties, class: "block text-gray-700 font-bold mb-2" %>
      <%= form.text_area :additional_properties, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
    </div>

    <div class="mb-4">
      <div class="flex items-center justify-center w-full">
        <label for="dropzone-file" class="flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600">
          <div class="flex flex-col items-center justify-center pt-5 pb-6">
            <svg aria-hidden="true" class="w-10 h-10 mb-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path></svg>
            <p class="mb-2 text-sm text-gray-500 dark:text-gray-400"><span class="font-semibold">Click to upload</span> or drag and drop</p>
            <p class="text-xs text-gray-500 dark:text-gray-400">SVG, PNG, JPG or GIF (MAX. 800x400px)</p>
          </div>
          <%= form.file_field :images, multiple: true, id: "dropzone-file", class: "hidden" %>
        </label>
      </div>
    </div>

    <% if @annonce.persisted? %>
      <div class="mb-4">
        <p class="block text-gray-700 font-bold mb-2">Current Images:</p>
        <div class="flex flex-wrap">
          <% @annonce.images.each do |image| %>
            <div class="relative w-24 h-24 mr-4 mb-4">
              <%= image_tag image.variant(resize_to_fill: [200, 200]), class: "object-cover w-full h-full rounded-lg" %>
              <div class="absolute top-2 right-2">
                <button class="delete-image bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-2 rounded focus:outline-none focus:shadow-outline" data-image-id="<%= image.id %>">X</button>
              </div>
            </div>
          <% end %>


        </div>
      </div>
    <% end %>

    <div class="flex items-center justify-between">
      <%= form.button @annonce.persisted? ? "Update Annonce" : "Create Annonce", class: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" %>
      <%= link_to "Cancel", root_path, class: "bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" %>
    </div>

  <% end %>
</div>


<script>

document.addEventListener("DOMContentLoaded", function() {
  const deleteButtons = document.querySelectorAll(".delete-image");
  deleteButtons.forEach(function(button) {
    const csrfToken = '<%= form_authenticity_token %>';
    button.addEventListener("click", function(event) {
      event.preventDefault();
      const imageId = button.getAttribute("data-image-id");
      deleteImage(imageId,csrfToken);
    });
  });
});

function deleteImage(imageId,csrfToken) {
  const xhr = new XMLHttpRequest();
  xhr.open("DELETE", "/images/" + imageId, true);
  xhr.setRequestHeader("Content-Type", "application/json");
  xhr.setRequestHeader("X-CSRF-Token", csrfToken);
  xhr.onload = function() {
    if (xhr.status === 204) {
      const imageDiv = document.querySelector(`[data-image-id="${imageId}"]`).closest('.relative');
      imageDiv.remove();
    } else {
      console.error(xhr.statusText);
    }
  };
  xhr.onerror = function() {
    console.error(xhr.statusText);
  };
  xhr.send();
}
</script>
